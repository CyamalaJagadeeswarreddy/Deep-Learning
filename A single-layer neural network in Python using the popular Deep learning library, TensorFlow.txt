 import tensorflow as tf
import numpy as np
# Generate some sample data
np.random.seed(42)
X_train = np.random.rand(100, 1) # Input features
y_train = 2 * X_train + 1 + 0.1 * np.random.randn(100, 1) # Output labels with some noise
# Define the single-layer neural network model
model = tf.keras.Sequential([
tf.keras.layers.Dense(units=1, input_shape=(1,), activation='linear')
])
# Compile the model
model.compile(optimizer='sgd', loss='mean_squared_error')
# Train the model
model.fit(X_train, y_train, epochs=100)
# Make predictions
X_new = np.array([[0.5]])
predictions = model.predict(X_new)
print("Predictions:", predictions)